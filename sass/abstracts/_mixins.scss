@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Media queries
/* 
  0- 600px;     phone
  600-900px;    tablet portrait
  900-1200px;   tablet landscape
  1200-1800px;  desktop (default styles)
  1800px +;     big desktop screens

  $breakpoint arguments
  - phone
  - tab-port
  - tab-land
  - big-desktop

  ORDER: Base + typography > general layout + grid > page layout > components
*/
/* 
  We are not using pixels in our media queries.
  Thats because if the user changes the default font size in the browser,
  the media queries wont be affected by that.
  So we want to use relative units (ems, rems) that will convert the units.
  But ems & rems are not affected by the root font size inside of media queries.
  That mean that 1 em/rem is always equal to the browser default 16px,
  or if the user change it to 18, it will be 18px no matter what our base font is.

  Anyway we are going to use ems here since theres been experiments telling us that its better then rems here.
  Keeping that in mind 1em is = 16px.
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      // 600px / 16 = 37.5em
      @content;
    }
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      // 900px / 16 = 56.25em
      @content;
    }
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      // 1200px / 16 = 75em
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      // 1800px / 16 = 112.5em
      @content;
    }
  }
}
